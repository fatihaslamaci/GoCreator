// Copyright 2019 The GoCreator Authors. All rights reserved.
// Code Generator tarafından oluşturulmuştur
// Lütfen Değişiklik yapmayınız


package gocreator

import (

"database/sql"
"time"

)

{{ range $iii, $query := . }}
    type {{$query.Name}}Query struct {
    {{ range $ii, $data := $query.Tables }}
        {{ range $i, $e := $data.Fields }}  {{$data.Name}}_{{$e.Name}}   {{$e.FieldType}}
        {{ end }}
    {{ end }}}

    type {{$query.Name}}Prm struct {
    {{ range $ii, $data := $query.Parameters }}
         {{$data.Name}}   {{$data.FieldType}}
    {{ end }}}


    func {{$query.Name}}QuerySelect(db *sql.DB, prm {{$query.Name}}Prm) []{{$query.Name}}Query {
    rows, err := db.Query(`
    SELECT
    {{ range $ii, $data := $query.Tables }}
        {{ range $i, $e := $data.Fields }}
            {{ if and (eq $i 0) (eq $ii 0) }}
         {{$data.Name}}.{{ $e.Name}}
            {{ else }}
        ,{{$data.Name}}.{{$e.Name}}
            {{ end }}
        {{ end }}
    {{ end }}

    FROM

    {{ range $ii, $data := $query.Tables }}
        {{ if eq $ii 0 }}
        {{$data.Name}}
        {{ else }}
    {{$data.Join}} {{$data.Name}} ON {{$data.JoinOn}}
        {{ end }}
    {{ end }}


    ` {{if $query.Parameters}} {{ range $ii, $data := $query.Parameters }} ,prm.{{$data.Name}} {{ end }} {{ end }} )

    CheckErr(err)
    var result  []{{$query.Name}}Query
    for rows.Next() {
    item :={{$query.Name}}Query{}
    err2 := rows.Scan(

{{ range $ii, $data := $query.Tables }}

    {{ range $i, $e := $data.Fields }}
        {{if $e.Name}}
            &item.{{$data.Name}}_{{$e.Name}},
        {{ end }}
    {{ end }}
{{ end }}

    )
    CheckErr(err2)
    result = append(result, item)
    }
    return result
    }



{{ end }}
